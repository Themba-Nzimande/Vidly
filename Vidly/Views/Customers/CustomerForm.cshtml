@model Vidly.ViewModels.CustomerFormViewModel
@{
    ViewBag.Title = "CustomerForm";
}

<h2>Customer details</h2>

@using (Html.BeginForm("Save", "Customers"))
{
    //Code to display validation error messages at the top
    @Html.ValidationSummary(true, "Please fix the following errors")
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name, "Name")
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipTypeId, "Membership type")
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "MembershipName"), "Select membership type", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.MembershipType, "Select a membership type please")
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.BirthDate, "Date of Birth")
        @Html.TextBoxFor(m => m.Customer.BirthDate, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.BirthDate)
    </div>
    
    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsLetter) Subscribe to newsletter?
        </label>
    </div>
    @Html.HiddenFor(m => m.Customer.Id)
    //Token below is to prevent CSFR attack on customer edit/create page. The token must be validated in the controller action that is responsible for this form as well
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Submit</button>
}


@section scripts 
{
    //How to enable client side validation, client side validation uses the validation you created for the server side
    @Scripts.Render("~/bundles/jqueryval")
}
